@model Models.MenuCategory
    @{ 
        string error = ViewBag.errmsg;
        Layout = "~/Views/SuperAdmin/_SuperAdminLayout.cshtml";
    }

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>MenuCategory</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.MCDesc, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MCDesc, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MCDesc, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.RCode, "Restaurant", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input name="RCode" class = "form-control" value="@Model.RCode" readonly/>
            </div>
        </div>
        <div class="row">
            <div class="form-group col-3">
                @Html.LabelFor(model => model.Veg, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.Veg)
                        @Html.ValidationMessageFor(model => model.Veg, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group col-3">
                @Html.LabelFor(model => model.NonVeg, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.NonVeg)
                        @Html.ValidationMessageFor(model => model.NonVeg, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group col-3">
                @Html.LabelFor(model => model.Bar, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.Bar)
                        @Html.ValidationMessageFor(model => model.Bar, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group col-3">
                @Html.LabelFor(model => model.Beverages, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.Beverages)
                        @Html.ValidationMessageFor(model => model.Beverages, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CreatedBy, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CreatedBy, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CreatedBy, "", new { @class = "text-danger" })
            </div>
        </div>
        
        <label style="color:red">@error</label>

        <div class="form-group row">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-outline-primary" />
            </div>
            <div class="col-md-offset-2 col-md-2 align-self-end">
                @Html.ActionLink("Back to List", "MenuCategories",new {id=Model.RCode })
            </div>
        </div>
    </div>
}
