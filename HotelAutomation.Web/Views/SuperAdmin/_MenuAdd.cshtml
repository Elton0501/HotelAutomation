@model Models.Menu
@{
    var rid = ViewBag.rid;
    var errmsg = ViewBag.ErrMsg;
    var imageurl = "/Content/Images/DefaultImage.jpg";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Menu</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })


    <div class="form-group">
        @Html.LabelFor(model => model.MCCode, "Menu Category", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("MCCode", (IEnumerable<SelectListItem>)ViewBag.cat, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.MCCode, "", new { @class = "text-danger" })
        </div>
    </div>

    <input value="@rid" name="RCode" hidden />

    <div class="form-group">
        @Html.LabelFor(model => model.MDesc, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.MDesc, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.MDesc, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.MComment, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.MComment, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.MComment, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.MTCode, "Menu Type", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("MTCode", (IEnumerable<SelectListItem>)ViewBag.tp, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.MTCode, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label for="exampleFormControlInput1">Logo</label>
        <br />
        <input name="img" id="Image" required hidden />
        <input id="imageUpload" type="file" name="ImageOne" accept="image/*" class="form-control-file" required>
        <br />
        <img id="PlaceImage" alt="" src="@imageurl" style="width: 20%; margin-top: 5px;" />
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.CreatedBy, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.CreatedBy, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.CreatedBy, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>

    <label>@errmsg</label>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

<script>
     $("#imageUpload").change(function () {
        var element = this;

        var formData = new FormData();
        var totlaFiles = element.files.length;

        for (var i = 0; i < totlaFiles; i++) {
            var file = element.files[i];
            formData.append("Photo", file)
        }

        $.ajax({
            type: 'POST',
            url: '@Url.Action("UploadMenuImage", "Image")',
            data: formData,
            dataType: 'json',
            contentType: false,
            processData: false
        })
            .done(function (response) {
                if (response.Success == true)
                {
                    $("#Image").val(response.ImageURL);
                    $("#PlaceImage").attr("src", response.ImageURL);
                }
        })
        .fail(function (XMLHttpRequest, textStatus, errorThrown) {
            Swal.fire({
                icon: 'error',
                title: 'Oops...',
                text: 'Something went wrong!',
            })
        });
    });
</script>
